#!/usr/bin/env node
require("coffee-script");
var
    watch = require("watch"),
    path = require("path"),
    server = require("../server"),
    debounce = require("lodash.debounce"),
    once = require("lodash.once"),
    optimist = require('optimist');

var argv = optimist
  .usage('Usage: quickreload [root] {OPTIONS}')
  .wrap(80)
  .option('help', {
    alias: 'h',
    desc : 'Show this help'
  })
  .option('css', {
    default: 'css,sass,less,scss,styl',
    desc : 'CSS file extensions.'
  })
  .option('js', {
    default: 'js,coffee,json',
    desc : 'JavaScript file extensions.'
  })
  .option('html', {
    default: 'html',
    desc : 'HTML file extensions.'
  })
  .option('ignore', {
    alias : 'i',
    desc : 'Ignore a directory'
  }).argv;

if (argv.help) {
  return optimist.showHelp()
}

send = server.serve();

var toExt = function(ext) {
  return "."+ext;
};

var listeners = {
  css: {
    match: new RegExp(argv.css.split(",").map(toExt).join("|")+"$"),
    onChange: debounce(function() {
      send("reload-css");
    }, 50)
  },
  js: {
    match: new RegExp(argv.js.split(",").map(toExt).join("|")+"$"),
    onChange: debounce(function(f) {
      send("reload-js");
    }, 50)
  },
  html: {
    match: new RegExp(argv.html.split(",").map(toExt).join("|")+"$"),
    onChange: debounce(function(f) {
      send("reload");
    }, 50)
  }
};

var handleChange = function(f, stat) {
  Object.keys(listeners).forEach(function(key) {
    var listener = listeners[key];
    if (f.match(listener.match))
      listener.onChange(f);
  });
};

watch.createMonitor(".", {interval: 100}, once(function (monitor) {
  monitor.on("created", handleChange);
  monitor.on("changed", handleChange);
  monitor.on("removed", handleChange);
  console.log("Watching %d files in %s", Object.keys(monitor.files).length, path.resolve("."))
}));
